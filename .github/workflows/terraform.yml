name: terraform pipeline automation

on:
    push:
      branches:
         - stage
    pull_request:
      branches:
         - main
         - master
       

env:
    TF_VAR_app_vm_size: "Standard_D2_v4"
    TF_VAR_db_vm_size: "Standard_D2_v4"
    TF_VAR_vm_username: "cld_admin"
    TF_VAR_vm_password: ${{ secrets.VM_PASSWORD }}
    TF_VAR_db_username: "db_admin"
    TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}



jobs:
    terraform_plan:

        name: "terraform Plan"
        runs-on: self-hosted
        environment: terraform-azdeploy-env

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v3
   
            - name: "Login to Azure Subscription"
              uses: azure/login@v2
              with:
                auth-type: IDENTITY
                tenant-id: ${{vars.ARM_TENANT_ID}}
                subscription-id: ${{ vars.ARM_SUBSCRIPTION_ID }}
                enable-AzPSSession: true

            - name: "Setup Terraform environment"
              uses: hashicorp/setup-terraform@v3

            - name: Azure CLI script
              uses: azure/cli@v2
              with:
                azcliversion: latest
                inlineScript: |
                    az account show    

            - name: "Terraform init"
              run: TF_LOG=DEBUG terraform init

            - name: Validate terraform code
              run: terraform validate

            - name: Run Terraform security
              uses: aquasecurity/tfsec-action@v1.0.0

            - name: Terraform Plan
              run: terraform plan -out="plan.tfplan"

            - name: View plan file
              run: terraform show plan.tfplan


    auto-approve:
      name: Approve Pull request
      runs-on: self-hosted
      needs: terraform_plan
      environment: terraform-azdeploy-env
      if: github.event_name == 'pull_request'

      steps:
         - name: Approve Pull request
           uses: hmarr/auto-approve-action@v3
           with:
             github-token: ${{ secrets.GITHUB_TOKEN }}


    terraform_apply:
      name: Terraform Apply
      runs-on: self-hosted
      needs: auto-approve
      environment: terraform-azdeploy-env
      if: github.event_name == 'pull_request'
      
      steps:
        - name: Run terraform apply
          run: terraform apply -auto-approve plan.tfplan

 


